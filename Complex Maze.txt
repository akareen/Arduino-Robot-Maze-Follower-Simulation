Complex Maze

Robot Setup
robot->x = 640-10-170;
robot->y = 460;
robot->true_x = 640-10-170;
robot->true_y = 460;
robot->width = ROBOT_WIDTH;
robot->height = ROBOT_HEIGHT;
robot->direction = 0;
robot->angle = 0;
robot->currentSpeed = 0;
robot->crashed = 0;
robot->auto_mode = 0;

Walls
int i;
insertAndSetFirstWall(head, 12,  640-10-120, 450, 10, 30);
insertAndSetFirstWall(head, 12,  640-10-220, 450, 10, 30);

for (i = 0; i < 100; i++){
    insertAndSetFirstWall(head, i,  640-10-(20 + i) , 350 + i, 10, 10); //1
    insertAndSetFirstWall(head, i,  640-10-(20 +100 + i) , 350 + i, 10, 10); //1
}
insertAndSetFirstWall(head, 12,  640-10-20, 280, 10, 70);
insertAndSetFirstWall(head, 12,  640-10-120, 280, 10, 70);

for (i = 0; i < 180; i++){
    insertAndSetFirstWall(head, i,  640-10-(20 +190 - i/2) , 100 + i, 10, 10); //1
}
for (i = 0; i < 105; i++){
    insertAndSetFirstWall(head, i,  640-10-(20 +105/2 - i/2) , 175 + i, 10, 10); //1
}


insertAndSetFirstWall(head, 2,  640-105/2-20, 175, 105/2, 10);
insertAndSetFirstWall(head, 2,  640-10-20, 20, 10, 155);
insertAndSetFirstWall(head, 2,  640-300-20, 20, 300, 10);
insertAndSetFirstWall(head, 2,  640-10-320, 20, 10, 60);
insertAndSetFirstWall(head, 2,  640-130-80, 100, 130, 10);
insertAndSetFirstWall(head, 2,  640-10-80, 80, 10, 20);
insertAndSetFirstWall(head, 2,  640-160-80, 80, 160, 10);


double j;
for (i = 0; i < 50; i++){
    j = i;
    insertAndSetFirstWall(head, i+1,
                        // the most important bit is below.
                        // increase the 20 for a tighter bend
                        // descrease for a more meandering flow
                        640-10-(320 + 30*sin(10*j * M_PI/180)),
                        // increase the 5 for a spacier curve
                        (i * 5)+80,
                        10, 10);
}
for (i = 0; i < 75; i++){
    j = i;
    insertAndSetFirstWall(head, i+1,
                        // the most important bit is below.
                        // increase the 20 for a tighter bend
                        // descrease for a more meandering flow
                        640-10-(240 + 30*sin(10*j * M_PI/180)),
                        // increase the 5 for a spacier curve
                        (i * 5)+80,
                        10, 10);
}

insertAndSetFirstWall(head, 2,  640-105-345, 330, 105, 10);
insertAndSetFirstWall(head, 2,  640-10-450, 190, 10, 150);
insertAndSetFirstWall(head, 2,  640-70-380, 190, 70, 10);
insertAndSetFirstWall(head, 2,  640-10-380, 20, 10, 170);
insertAndSetFirstWall(head, 2,  640-260-380, 20, 260, 10);

insertAndSetFirstWall(head, 2,  640-345-255, 455, 345, 10);
insertAndSetFirstWall(head, 2,  640-10-600, 100, 10, 365);
insertAndSetFirstWall(head, 2,  640-70-530, 100, 70, 10);
insertAndSetFirstWall(head, 2,  640-10-530, 80, 10, 20);
insertAndSetFirstWall(head, 2,  640-110-530, 80, 110, 10);


End Position
checkRobotReachedEnd(&robot, 0, 20, 50, 60)